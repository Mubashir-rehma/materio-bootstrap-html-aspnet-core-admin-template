@page
@model AspnetCoreFull.Pages.CRUD.userCRUDModel
@using AspnetCoreFull.Models;

@{
  ViewData["Title"] = "userCRUD";

  // Calculate percentages and round them to the nearest integer
  int totalUsers = Model.TotalUserCount;
  int verifiedUsers = Model.VerifiedUserCount;
  int duplicateUsers = Model.DuplicateUserCount;
  int unverifiedUsers = Model.UnverifiedUserCount;

  int verifiedUsersPercentage = (totalUsers != 0) ? (int)Math.Round((double)verifiedUsers / totalUsers * 100) : 0;
  int duplicateUsersPercentage = (totalUsers != 0) ? (int)Math.Round((double)duplicateUsers / totalUsers * 100) : 0;
  int unverifiedUsersPercentage = (totalUsers != 0) ? (int)Math.Round((double)unverifiedUsers / totalUsers * 100) : 0;

  ViewData["VerifiedUsersPercentage"] = verifiedUsersPercentage;
  ViewData["DuplicateUsersPercentage"] = duplicateUsersPercentage;
  ViewData["UnverifiedUsersPercentage"] = unverifiedUsersPercentage;

}


@functions {
  // This function is used to format the phone number in the US format
  public string FormatUSPhoneNumber(string phoneNumber)
  {
    if (!string.IsNullOrEmpty(phoneNumber))
    {
      // Replace any non-numeric characters
      string cleanedNumber = new string(phoneNumber.Where(char.IsDigit).ToArray());

      if (cleanedNumber.Length >= 10)
      {
        // Format as +1 (123) 456-7890
        return string.Format("+1 ({0}) {1}-{2}", cleanedNumber.Substring(0, 3), cleanedNumber.Substring(3, 3),
        cleanedNumber.Substring(6, 4));
      }
      else
      {
        return phoneNumber; // Return the original number if it doesn't match the expected format
      }
    }
    return phoneNumber; // Return the original number if it's empty or null
  }

  // This function is used to generate the user avatar
  public string GenerateUserAvatar(AspnetCoreFull.Models.User user)
  {
    var random = new Random();
    // The below array contains the list of available states
    var states = new[] { "success", "danger", "warning", "info", "dark", "primary", "secondary" };
    // Generate a random number and set it as the index of the state to set the avatar badge background color
    var randomIndex = (user.Id < 1 || user.Id > 6) ? random.Next(0, states.Length) : user.Id;
    randomIndex = Math.Max(0, Math.Min(randomIndex, states.Length - 1));

    var selectedState = states[randomIndex];

    var nameParts = user.UserName.Split(' ');
    var initials = "NA"; // Default value

    if (nameParts.Length == 1)
    {
      // Single name, take the first letter as the initial
      if (nameParts[0].Length >= 1)
      {
        initials = nameParts[0].Substring(0, 1);
      }
    }
    else if (nameParts.Length >= 2)
    {
      // Full name, take two initials
      string firstInitial = nameParts[0].Length >= 1 ? nameParts[0].Substring(0, 1) : "";
      string secondInitial = nameParts[1].Length >= 1 ? nameParts[1].Substring(0, 1) : "";
      initials = firstInitial + secondInitial;
    }
    // Generate the avatar HTML
    var avatarHtml = $@"
<div class=""d-flex align-items-center"">
<div class=""avatar avatar-sm me-3"">
<span class=""avatar-initial rounded-circle bg-label-{selectedState}"">{initials}</span>
</div>
<span class=""user-name-full-{user.Id} fw-medium text-capitalize"">{user.UserName}</span>
</div>";

    return avatarHtml;
  }

}

@section VendorStyles {
  <link rel="stylesheet" href="~/vendor/libs/datatables-bs5/datatables.bootstrap5.dist.css">
  <link rel="stylesheet" href="~/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.dist.css">
  <link rel="stylesheet" href="~/vendor/libs/datatables-buttons-bs5/buttons.bootstrap5.dist.css">
  <link rel="stylesheet" href="~/vendor/libs/sweetalert2/sweetalert2.dist.css" />
  <link rel="stylesheet" href="~/vendor/libs/&#64;form-validation/umd/styles/index.min.css" />
}

@section VendorScripts {
  <script src="~/vendor/libs/moment/moment.dist.js"></script>
  <script src="~/vendor/libs/datatables-bs5/datatables-bootstrap5.dist.js"></script>
  @* The below JsZip include is directly taken from cdn as excell button in datatable exports was not working got to check
for it later!! *@
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
  <script src="~/vendor/libs/sweetalert2/sweetalert2.dist.js"></script>
  <script src="~/vendor/libs/&#64;form-validation/umd/bundle/popular.min.js"></script>
  <script src="~/vendor/libs/&#64;form-validation/umd/plugin-bootstrap5/index.min.js"></script>
  <script src="~/vendor/libs/&#64;form-validation/umd/plugin-auto-focus/index.min.js"></script>
  <script src="~/vendor/libs/cleavejs/cleave.dist.js"></script>
  <script src="~/vendor/libs/cleavejs/cleave-phone.dist.js"></script>
}

@section PageScripts {
  <script src="~/js/user-crud.dist.js"></script>
}

<!-- User Analytics Widget -->
<div class="row g-4 mb-4">
  <!-- Total Users -->
  <div class="col-sm-6 col-xl-3">
    <div class="card">
      <div class="card-body">
        <div class="d-flex align-items-start justify-content-between">
          <div class="content-left">
            <span>Users</span>
            <div class="d-flex align-items-end mt-2">
              <h3 class="mb-0 me-2">@Model.TotalUserCount</h3>
              <small class="text-primary">(100%)</small>
            </div>
            <small>Total Users</small>
          </div>
          <span class="badge bg-label-primary rounded p-2">
            <i class="bx bx-user bx-sm"></i>
          </span>
        </div>
      </div>
    </div>
  </div>
  <!-- Verified Users -->
  <div class="col-sm-6 col-xl-3">
    <div class="card">
      <div class="card-body">
        <div class="d-flex align-items-start justify-content-between">
          <div class="content-left">
            <span>Verified Users</span>
            <div class="d-flex align-items-end mt-2">
              <h3 class="mb-0 me-2">@Model.VerifiedUserCount</h3>
              <small class="text-success">( +@ViewData["VerifiedUsersPercentage"]% )</small>
            </div>
            <small>Recent analytics </small>
          </div>
          <span class="badge bg-label-success rounded p-2">
            <i class="bx bx-user-check bx-sm"></i>
          </span>
        </div>
      </div>
    </div>
  </div>
  <!-- Duplicate Users -->
  <div class="col-sm-6 col-xl-3">
    <div class="card">
      <div class="card-body">
        <div class="d-flex align-items-start justify-content-between">
          <div class="content-left">
            <span>Duplicate Users</span>
            <div class="d-flex align-items-end mt-2">
              <h3 class="mb-0 me-2">@Model.DuplicateUserCount</h3>
              <small class="text-danger">( +@ViewData["DuplicateUsersPercentage"]% )</small>
            </div>
            <small>Recent analytics</small>
          </div>
          <span class="badge bg-label-danger rounded p-2">
            <i class="bx bx-group bx-sm"></i>
          </span>
        </div>
      </div>
    </div>
  </div>
  <!-- Unverified Users -->
  <div class="col-sm-6 col-xl-3">
    <div class="card">
      <div class="card-body">
        <div class="d-flex align-items-start justify-content-between">
          <div class="content-left">
            <span>Verification Pending</span>
            <div class="d-flex align-items-end mt-2">
              <h3 class="mb-0 me-2">@Model.UnverifiedUserCount</h3>
              <small class="text-warning">( +@ViewData["UnverifiedUsersPercentage"]% )</small>
            </div>
            <small>Recent analytics</small>
          </div>
          <span class="badge bg-label-warning rounded p-2">
            <i class="bx bx-user-voice bx-sm"></i>
          </span>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Users DataTable -->
@if (Model.Users != null && Model.Users.Count > 0)
{
  <div class="card">
  <div class="card-header">
    <h5 class="card-title mb-0">Search Filter</h5>
  </div>
  <div class="card-datatable table-responsive pb-0">
    <table id="userTable" class="table">
      <thead class="border-top">
        <tr>
          <th></th>
          <th>Id</th>
          <th>User</th>
          <th>Email</th>
          <th>Verified</th>
          <th>Contact</th>
          <th>Role</th>
          <th>Plan</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var user in Model.Users)
          {
            <tr>
              <td></td>
              <td>@user.Id</td>
              <td class="user-name text-nowrap">@Html.Raw(GenerateUserAvatar(user))</td>
              <td class="text-truncate">@user.Email</td>
              <td>@if (user.IsVerified)
                {
                  <i class='bx fs-4 bx-check-shield text-success'></i>
                }
                else
                {
                  <i class="bx fs-4 bx-shield-x text-danger"></i>
                }
                <input type="hidden" class="user-verified-@user.Id" data-is-verified="@user.IsVerified" />
              </td>
              <td class="text-nowrap">@FormatUSPhoneNumber(user.ContactNumber)</td>
              <td class="text-capitalize">@user.SelectedRole</td>
              <td class="text-capitalize">@user.SelectedPlan</td>
              <td class="text-nowrap">
                <!-- Edit Button -->
                <button class="btn btn-sm btn-icon edit-user-button" data-bs-toggle="offcanvas"
                  data-bs-target="#editUserOffcanvas" id="@user.Id-editUser"><i class="bx bx-edit"></i></button>
                <!-- Delete Button -->
                <form method="post" asp-page-handler="Delete" asp-route-id="@user.Id" id="@user.Id-deleteForm"
                  onsubmit="showSuccessAlert('Deleted');" class="d-inline">
                  <button class="btn btn-sm btn-icon" id="@user.Id-deleteUser" onclick="showDeleteConfirmation('@user.Id')">
                    <i class="bx bx-trash"></i>
                  </button>
                </form>
                <!-- Dropdown Button -->
                <button class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i
                    class="bx bx-dots-vertical-rounded"></i></button>
                <div class="dropdown-menu dropdown-menu-end m-0">
                  <a href="javascript:void();" class="dropdown-item">View</a>
                  <a href="javascript:void();" class="dropdown-item">Suspend</a>
                </div>

              </td>
            </tr>
          }
        </tbody>
      </table>
    </div>
  </div>
}


<!-- Create User Form Offcanvas -->
<div class="offcanvas offcanvas-end" tabindex="-1" id="createUserOffcanvas" aria-labelledby="createUserOffcanvasLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="createUserOffcanvasLabel">Create User</h5>
    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body mx-0 flex-grow-0">
    <form method="post" id="createUserForm">
      <div class="mb-3">
        <label for="NewUser_User" class="form-label">User Name</label>
        <input asp-for="NewUser.UserName" class="form-control" id="NewUser_User" placeholder="John Doe"
          aria-label="John Doe" />
      </div>
      <div class="mb-3">
        <label for="NewUser_Email" class="form-label">Email</label>
        <input asp-for="NewUser.Email" class="form-control" id="NewUser_Email" placeholder="john.doe@example.com"
          aria-label="john.doe@example.com">
      </div>
      <div class="mb-3">
        <label for="NewUser_ContactNumber" class="form-label">Contact</label>
        <input asp-for="NewUser.ContactNumber" class="form-control phone-mask" id="NewUser_ContactNumber"
          placeholder="+1 (609) 988-44-11" aria-label="+1 (609) 988-44-11" />
      </div>
      <div class="mb-3">
        <label for="NewUser_SelectedRole" class="form-label">Select Role</label>
        <select asp-for="NewUser.SelectedRole" asp-items="Model.AvailableRolesSelectList" class="form-select"
          id="NewUser_SelectedRole">
          <option value="">Select Role</option>
        </select>
      </div>
      <div class="mb-3">
        <label for="NewUser_SelectedPlan" class="form-label">Select Plan</label>
        <select asp-for="NewUser.SelectedPlan" asp-items="Model.AvailablePlansSelectList" class="form-select"
          id="NewUser_SelectedPlan">
          <option value="">Select Plan</option>
        </select>
      </div>
      <div class="mb-3 form-check">
        <input type="checkbox" asp-for="NewUser.IsVerified" class="form-check-input" id="NewUser_IsVerified" />
        <label class="form-check-label" for="NewUser_IsVerified">Is Verified</label>
      </div>
      <div class="row">
        <div class="col-12">
          <button type="submit" class="btn btn-primary me-3">Submit</button>
          <button type="reset" class="btn btn-label-secondary" data-bs-dismiss="offcanvas">Cancel</button>
        </div>
      </div>
    </form>
  </div>
</div>

<!-- Edit User Form Offcanvas -->
<div class="offcanvas offcanvas-end" tabindex="-1" id="editUserOffcanvas" aria-labelledby="editUserOffcanvasLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="editUserOffcanvasLabel">Edit User</h5>
    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body mx-0 flex-grow-0">
    <form method="post" asp-page-handler="EditOrUpdate" asp-route-id="" id="editUserForm">

      <div class="mb-3">
        <label for="EditUser_UserName" class="form-label">User Name</label>
        <input class="form-control" id="EditUser_UserName" name="user.UserName" value="" />
      </div>

      <div class="mb-3">
        <label for="EditUser_Email" class="form-label">Email</label>
        <input class="form-control" id="EditUser_Email" name="user.Email" value="" />
      </div>

      <div class="mb-3">
        <label for="EditUser_ContactNumber" class="form-label">Contact</label>
        <input class="form-control phone-mask" id="EditUser_ContactNumber" name="user.ContactNumber" />
      </div>

      <div class="mb-3">
        <label for="EditUser_SelectedRole" class="form-label">Select Role</label>
        <select class="form-select" id="EditUser_SelectedRole" name="user.SelectedRole"
          asp-items="Model.AvailableRolesSelectList" value="">
        </select>
      </div>

      <div class="mb-3">
        <label for="EditUser_SelectedPlan" class="form-label">Select Plan</label>
        <select class="form-select" id="EditUser_SelectedPlan" name="user.SelectedPlan"
          asp-items="Model.AvailablePlansSelectList" value="">
        </select>
      </div>

      <div class="mb-3 form-check">
        <input type="checkbox" class="form-check-input" name="user.IsVerified" id="EditUser_IsVerified" />
        <label class="form-check-label" for="EditUser_IsVerified">Is Verified</label>
      </div>

      <div class="row">
        <div class="col-12">
          <button type="submit" class="btn btn-primary me-3">Submit</button>
          <button type="reset" class="btn btn-label-secondary" data-bs-dismiss="offcanvas">Cancel</button>
        </div>
      </div>
    </form>
  </div>
</div>
